server:
  port: 9090

management:
  otlp:
    tracing:
      sampler:
        probability: 1.0
      sender:
        type: grpc
      endpoint: http://localhost:4317/v2/spans
      compression: gzip
      timeout: 10s

spring:
  docker:
    compose:
      skip:
        in-tests: false
      file: "file:@project.basedir@/src/test/resources/compose/docker-compose.yml"
      lifecycle-management: start-and-stop
  kafka:
    bootstrap-servers: localhost:19092
  cloud:
    function:
      definitions: consumerBatch
    stream:
      binders:
        kafka:
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      enableObservation: true
                    bindings:
                      consumerBatch-in-0:
                        consumer:
                          configuration:
                            max.poll.records: 10
                            fetch.max.wait.ms: 3000
                            fetch.min.bytes: 1000000
                      producer-batch-out-0:
                        producer:
                          configuration:
                            linger.ms: 1000
      #      output-bindings: producer-batch-out-0;producer-single-out-0
      bindings:
        producer-batch-out-0:
          destination: destination.batch.topic
        consumerBatch-in-0:
          destination: destination.batch.topic
          group: consumer-group-batch
          consumer:
            batch-mode: true
        producer-single-out-0:
          destination: destination.topic            
        consumerSingle-in-0:
          destination: destination.topic
          group: consumer-group-single
